"Games"
{
	// Unused, was testing values, kept for demonstration
	"#default"
	{
		"Functions"
		{
			"CTerrorWeapon::TrySwing"
			{
				"signature"		"CTerrorWeapon::TrySwing"
				"callconv"		"thiscall"
				"return"		"int"
				"this"			"entity"
				"arguments"
				{
					"a1"
					{
						"type"	"float"
					}
					"a2"
					{
						"type"	"float"
					}
					"a3"
					{
						"type"	"float"
					}
				}
			}
		}
	}

	"left4dead2"
	{
		"Signatures"
		{
			/*
			*	CTerrorWeapon::TrySwing(CTerrorWeapon *this, float, float, float)
			*/
			"CTerrorWeapon::TrySwing"
			{
				"library"	"server"
				"linux"		"@_ZN13CTerrorWeapon8TrySwingEfff"
				"windows"	"\x55\x8B\x2A\x83\x2A\x2A\x56\x8B\x2A\x8B\x2A\x8B\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x84\x2A\x0F\x85\x2A\x2A\x2A\x2A\x53"
				/* 55 8B ? 83 ? ? 56 8B ? 8B ? 8B ? ? ? ? ? ? ? 84 ? 0F 85 ? ? ? ? 53 */
				/* Search: "Claw.Swing", VTable 2nd above. */
			}
			/*
			 *  CTerrorWeapon::OnSwingStart(CTerrorWeapon *this)
			 */
			"CTerrorWeapon::OnSwingStart"
			{
				"library"	"server"
				"linux"		"@_ZN13CTerrorWeapon12OnSwingStartEv"
				"windows"	"\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\x2A\xA1\x2A\x2A\x2A\x2A\x33\x2A\x89\x2A\x2A\x56\x57\x8B\x2A\xE8\x2A\x2A\x2A\x2A\x8B\x2A\x85\x2A\x0F\x84\x2A\x2A\x2A\x2A\x8B\x2A\x8B\x2A\x2A\x2A\x2A\x2A\x8B"
				/* ? ? ? ? ? ? ? ? ? A1 ? ? ? ? 33 ? 89 ? ? 56 57 8B ? E8 ? ? ? ? 8B ? 85 ? 0F 84 ? ? ? ? 8B ? 8B ? ? ? ? ? 8B */
				/* Search: "Weapon.Swing" */
			}
		}
	}
}